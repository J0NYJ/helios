#include "templates/booth-header.tmpl"
<div id="header">
    <h1>Helios Voting Booth &mdash; $election.name</h1>
    <h3>Fingerprint: <span id="election_hash"></h3>
</div>

<script language="javascript">
// utils

BOOTH = {};

BOOTH.setup_templates = function() {
    \$('#election_div').setTemplateURL("/static/templates/booth/election.html");
    \$('#question_div').setTemplateURL("/static/templates/booth/question.html");
    \$('#confirm_div').setTemplateURL("/static/templates/booth/confirm.html");
    \$('#seal_div').setTemplateURL("/static/templates/booth/seal.html");
    \$('#audit_div').setTemplateURL("/static/templates/booth/audit.html");
    \$('#login_div').setTemplateURL("/static/templates/booth/login.html");
    \$('#done_div').setTemplateURL("/static/templates/booth/done.html");
};

// set up the message when navigating away
BOOTH.done_p = false;

window.onbeforeunload = function(evt) {
  if (BOOTH.done_p)
    return;

  if (typeof evt == 'undefined') {
    evt = window.event;
  }
  
  var message = "If you leave this page with an in-progress ballot, your ballot will be lost.";

  if (evt) {
    evt.returnValue = message;
  }
  
  return message;
};

BOOTH.setup_ballot = function(election) {
  BOOTH.ballot = {};

  // each question starts out with an empty array answer
  BOOTH.ballot.answers = [];
  \$(BOOTH.election.questions).each(function(i,x){
    BOOTH.ballot.answers[i] = [];
  });
};

BOOTH.setup_election = function(election, election_hash) {
  BOOTH.election = HELIOS.Election.fromJSONObject(election);
  BOOTH.election_hash = election_hash;

  \$('#election_hash')[0].innerHTML = BOOTH.election_hash;

  BOOTH.setup_ballot();
};

BOOTH.show = function(el) {
  \$('#page div').hide();
  el.show();
  return el;
};

BOOTH.show_election = function() {
  BOOTH.show(\$('#election_div')).processTemplate({'election' : BOOTH.election});
};

BOOTH.show_question = function(question_num) {
  BOOTH.show(\$('#question_div')).processTemplate({'question_num' : question_num, 
                      'last_question_num' : BOOTH.election.questions.length - 1,
                      'question' : BOOTH.election.questions[question_num]
                });
  
  // fake clicking through the answers, to trigger the disabling if need be
  // first we remove the answers array
  var answer_array = BOOTH.ballot.answers[question_num];
  BOOTH.ballot.answers[question_num] = [];
  \$(answer_array).each(function(i, ans) {
    BOOTH.click_checkbox_script(question_num, ans, true);
  });

};

BOOTH.click_checkbox_script = function(question_num, answer_num) {
  document.forms['answer_form']['answer_'+question_num+'_'+answer_num].click();
};

BOOTH.click_checkbox = function(question_num, answer_num, checked_p) {

  if (checked_p) {
     // multiple click events shouldn't screw this up
     if (\$(BOOTH.ballot.answers[question_num]).index(answer_num) == -1)
    BOOTH.ballot.answers[question_num].push(answer_num);

     \$('#answer_label_' + question_num + "_" + answer_num).addClass('selected');
  } else {
     BOOTH.ballot.answers[question_num] = UTILS.array_remove_value(BOOTH.ballot.answers[question_num], answer_num);
     \$('#answer_label_' + question_num + "_" + answer_num).removeClass('selected');
  }

  if (BOOTH.ballot.answers[question_num].length >= BOOTH.election.questions[question_num].max) {
     // disable the other checkboxes
     \$('.ballot_answer').each(function(i, checkbox) {
        if (!checkbox.checked)
       checkbox.disabled = true;
     });
  } else {
     // enable the other checkboxes
     \$('.ballot_answer').each(function(i, checkbox) {
       checkbox.disabled = false;
     });
  }
};

BOOTH.save_ballot_answer = function(question_num) {
};

\$(document).ready(function () {
    BOOTH.setup_templates();

    // first we get the raw data of the election to compute the hash
    $.get("/elections/$election.election_id", function(data_str) {
        var election_hash = b64_sha1(data_str);
        \$.getJSON("/elections/$election.election_id", function(data) {
            BOOTH.setup_election(data, election_hash);
            BOOTH.show_election();
        });
    });
});  

BOOTH.show_confirm = function() {
    // process the answers
    var choices = BALLOT.pretty_choices(BOOTH.election, BOOTH.ballot);

    BOOTH.show(\$('#confirm_div')).processTemplate({'questions' : BOOTH.election.questions, 'choices' : choices});
};

BOOTH.seal_ballot = function() {
    BOOTH.show(\$('#processing_div'));
    
    BOOTH.encrypted_ballot = new HELIOS.EncryptedVote(BOOTH.election.questions, BOOTH.ballot.answers, BOOTH.election.pk);
    
    BOOTH.show(\$('#seal_div')).processTemplate({'encrypted_vote_hash' : BOOTH.encrypted_ballot.get_hash()});
};

BOOTH.audit_ballot = function() {
    BOOTH.show(\$('#audit_div')).processTemplate({'audit_trail' : \$.toJSON(BOOTH.encrypted_ballot.get_audit_trail())});
};

BOOTH.cast_ballot = function() {
    // at this point, we delete the plaintexts by resetting the ballot
    BOOTH.setup_ballot(BOOTH.election);

    BOOTH.show(\$('#login_div')).processTemplate({'encrypted_vote_hash' : BOOTH.encrypted_ballot.get_hash()});
};

BOOTH.send_ballot = function() {
    var send_form = document.forms['send_ballot_form'];
    var data = {
      email : send_form.email.value,
      password : send_form.password.value
    };

    data['encrypted_vote'] = BOOTH.encrypted_ballot.toJSON();

    \$.ajax({
        type: "POST",
        url: "/elections/$election.key()/get_voter_by_email",
        data: {email: data['email']},
        success: function(result) {
            var voter_key = result;

            // not the way to do an error, check this.
            \$.ajax({
                type: "POST",
                url: "/elections/$election.key()/voters/" + voter_key + "/submit",
                data: data,
                success: function(result) {
                    BOOTH.show(\$("#done_div")).processTemplate();
                    BOOTH.done_p = true;
                },
                error: function(xhr, status, error) {
                    alert('Your vote was not recorded properly. Check your email and password and try again.');
                }
            });
        },
        error: function(xhr, status, error) {
            alert('No such voter! Try again.');
        }
    });
};

BOOTH.show_receipt = function() {
    UTILS.open_window_with_content("Your Voting Receipt for " + BOOTH.election.name + ": " + BOOTH.encrypted_ballot.get_hash());
};

//BOOTH.coerce_me = function() {
//    window.open("mailto:?subject=" + encodeURIComponent("My Vote") + "&body=" + encodeURIComponent("My proof of vote is:\n\n" + \$.toJSON(BOOTH.prepare_audit_trail(BOOTH.ballot.answers, BOOTH.encrypted_vote, BOOTH.randomness))));
//};

</script>
<div id="page">
  <div class="entry" id="election_div" class="panel">
    Loading Election Booth...
  </div>

  <div class="entry" id="question_div" class="panel">
  </div>

  <div class="entry" id="confirm_div" class="panel">
  </div>
  
  <div class="entry" id="processing_div" class="panel">
      <h3 align="center">Processing....</h3>
  </div>

  <div class="entry" id="seal_div" class="panel">
  </div>

  <div class="entry" id="audit_div" class="panel">
  </div>

  <div class="entry" id="login_div" class="panel">
  </div>

  <div class="entry" id="done_div" class="panel">
  </div>
</div>
#include "templates/booth-footer.tmpl"
