"""
Test trustee keys
"""

import sys
sys.path.append('../')

import simplejson

from crypto.algs import *

pk_and_pok_str= """
{"pok": {"challenge": "477579009330495972832358661650317627714327853490", "commitment": "2570221575346805619858773822447822943314104796728704696014605360245920749379337305320681274735674784601029546976663885673756442686538082357510801146653841257424187474325558504938466957883945070264973810140744468168256898650920960286626104948968493851101769429770990142921875814349459436985750476749836007448151844998032212712986657023940773927839089884312913238757519890142218938922840669962377224595887345849942600420502853028300063126570379415325468133122469402984938116910879947235865880997479461476848925204002675366153470584397823318492277785033220799880133254521657096139284179187281040142744958442043509229946", "response": "79214792864300611146340488217621125578785962603170322843956360545333099259094"}, "public_key": {"g": "14887492224963187634282421537186040801304008017743492304481737382571933937568724473847106029915040150784031882206090286938661464458896494215273989547889201144857352611058572236578734319505128042602372864570426550855201448111746579871811249114781674309062693442442368697449970648232621880001709535143047913661432883287150003429802392229361583608686643243349727791976247247948618930423866180410558458272606627111270040091203073580238905303994472202930783207472394578498507764703191288249547659899997131166130259700604433891232298182348403175947450284433411265966789131024573629546048637848902243503970966798589660808533", "p": "16328632084933010002384055033805457329601614771185955389739167309086214800406465799038583634953752941675645562182498120750264980492381375579367675648771293800310370964745767014243638518442553823973482995267304044326777047662957480269391322789378384619428596446446984694306187644767462460965622580087564339212631775817895958409016676398975671266179637898557687317076177218843233150695157881061257053019133078545928983562221396313169622475509818442661047018436264806901023966236718367204710755935899013750306107738002364137917426595737403871114187750804346564731250609196846638183903982387884578266136503697493474682071", "q": "61329566248342901292543872769978950870633559608669337131139375508370458778917", "y": "13529129406573622977930913996284370915773275348370233514277532318889051083208044257970526102604245727128885430887353284348220273078948889121598575720631154401376581211959403177340079080759622613080164359048476286787085812600256559604227920397331365308360496317549402913880240625809542990958779012629363709111663821070673593266983915113916915702571570816148149969133372661102686917622208741046858259293201594682426627785201984759986718054837021285054799380286053429182479354290328270195751846637288844405715320502717151517690633010950766694327377787708827872568449042168042733220553531085579746413720630689459260156412"}}
"""

pk_and_pok = simplejson.loads(pk_and_pok_str)

pk = EGPublicKey.from_dict(pk_and_pok['public_key'])
pok = DLogProof.from_dict(pk_and_pok['pok'])

print pk.verify_sk_proof(pok, DLog_challenge_generator)